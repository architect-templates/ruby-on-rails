name: my-rails
description: Example component that includes a Rails application with a postgres backend
homepage: https://github.com/architect-templates/ruby-on-rails

# Add secrets to be used by different services. For more information:
# https://docs.architect.io/deployments/secrets/
secrets:
  db_name:
    default: rails
  db_user:
    default: postgres
  db_pass:
    default: password
  secret_key_base:
    default: secret_key_base

services:
  # Name of the Rails service
  rails:
    # Build context is the location of your application relative to the architect.yml file
    build:
      context: .
    # We want our app to start up after the db is running so that we can connect to it on startup!
    # This block contains a list of services we need to start before 'app' starts.
    depends_on:
      - database
    # Set environment variables for your application here
    environment:
      DATABASE_URL: ${{ services.database.interfaces.main.url }}
      INGRESS_HOST: ${{ services.rails.interfaces.main.ingress.host }}
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 1 # Consider disabling for production
      SECRET_KEY_BASE: ${{ secrets.secret_key_base }}
      RAILS_SERVE_STATIC_FILES: true
    # Main interface port used to help define the url in the top level `interfaces` block
    interfaces:
      main:
        port: 3000
        # https://docs.architect.io/components/ingress-rules/
        ingress:
          subdomain: app
    # Debug block is used to enable hot-reloading to make real-time changes to an
    #   application while running `architect dev`. For more info, see -
    #   https://docs.architect.io/components/local-configuration/#hot-reloading
    debug:
      environment:
        RAILS_ENV: development
      volumes:
        app:
          # Path to source code relative to the architect.yml file
          host_path: .
          # The `WORKDIR` defined in the Dockerfile
          mount_path: /myapp
        gem-cache:
          mount_path: /usr/local/bundle/gems
        node-modules:
          mount_path: /myapp/node_modules
        tmp:
          mount_path: /myapp/tmp

  database:
    image: postgres:14
    environment:
      POSTGRES_DB: ${{ secrets.db_name }}
      POSTGRES_USER: ${{ secrets.db_user }}
      POSTGRES_PASSWORD: ${{ secrets.db_pass }}
    liveness_probe:
      command: pg_isready -d ${{ secrets.db_name }} -U ${{ secrets.db_user }}
      interval: 3s
      failure_threshold: 3
    interfaces:
      main:
        port: 5432
        protocol: postgresql
        username: ${{ secrets.db_user }}
        password: ${{ secrets.db_pass }}
        path: /${{ secrets.db_name }}
